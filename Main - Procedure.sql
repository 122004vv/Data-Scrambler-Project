IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'SCRAMBLE_DATA' AND TYPE ='P') DROP PROCEDURE SCRAMBLE_DATA
GO
/*
	SELECT THIS AND EXECUTE THIS IN THE END: 'SCRAMBLE_DATA'
*/
CREATE PROCEDURE SCRAMBLE_DATA
AS 
		DECLARE   
			  @START_DATE DATETIME
			, @LOG_TABLE_NAME	VARCHAR(250)
			, @LOG_TABLE_DETAIL_NAME	VARCHAR(250)
			, @ERROR_MSG			NVARCHAR(MAX)
			, @SQL_STMT				NVARCHAR(MAX)
			, @IDENTITY_COL_NAME	VARCHAR(250)
			, @TABLE_NAME			VARCHAR(30)
			, @COLUMN_NAME			VARCHAR(30)
			, @SCRAMBLE_METHOD		VARCHAR(10)
			, @VALUE_TO_BE_CHANGED	VARCHAR(100)
			, @SCRAMBLE_ID int
			, @NO_TABLES	INT
			, @REPLACE_VALUE	VARCHAR(500)
			, @NO_COLUMNS	INT
			, @NO_RECORDS	INT
			, @END_DATE	 DATETIME
			, @type		varchar(20)
			, @VAL	INT
			, @WHERE_COND VARCHAR(1000)
			, @DATE date 
			, @DATETIME DATETIME
	BEGIN TRY
	SET @START_DATE = GETDATE();
------------------------------------------------------------ERROR RAISING--------------------------------------------------------------
	IF NOT EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'U' AND NAME ='TABLE_CONFIG')
		BEGIN
		SET @ERROR_MSG='Table Not found: TABLE_CONFIG'
		RAISERROR (@ERROR_MSG, 16,1 );  
		END
	IF EXISTS(SELECT COUNT(0) FROM TABLE_CONFIG HAVING COUNT(0)<1)
		BEGIN
		SET @ERROR_MSG='TABLE_CONFIG does not have any record to scramble'
		RAISERROR(@ERROR_MSG,16,1);
		END 
------------------------------------------------------ERROR RAISING IN TABLE_CONFIG------------------------------------------
	SET @SCRAMBLE_ID=NULL
	SELECT TOP 1 @SCRAMBLE_ID=SCRAMBLE_ID, @TABLE_NAME=TABLE_NAME ,@COLUMN_NAME=COLUMN_NAME ,
				@SCRAMBLE_METHOD= SCRAMBLE_METHOD  ,@LOG_TABLE_NAME = LOG_TABLE_NAME , @LOG_TABLE_DETAIL_NAME = LOG_TABLE_DETAIL_NAME , @WHERE_COND=WHERE_CONDITION, @VALUE_TO_BE_CHANGED=VALUE_TO_BE_CHANGED 
						FROM TABLE_CONFIG 
    WHILE @SCRAMBLE_ID IS NOT NULL 
    BEGIN
	SELECT TOP 1 @TYPE=DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS 
					WHERE TABLE_NAME = @TABLE_NAME and COLUMN_NAME= @COLUMN_NAME
	IF @TABLE_NAME IS NULL OR @COLUMN_NAME IS NULL
	BEGIN
		SET @ERROR_MSG='Table Name and Column Name should be mentioned in the TABLE_CONFIG'
		RAISERROR(@ERROR_MSG,16,1);
	END
--	SELECT @VALUE_TO_BE_CHANGED,@type,@SCRAMBLE_METHOD
	IF @TYPE IN('DATETIME','DATE') AND @SCRAMBLE_METHOD='RPL' AND ISDATE(@VALUE_TO_BE_CHANGED)=0
	BEGIN
		SET @ERROR_MSG='REPLACE COLUMN DOES NOT MATCH THE COLUMN TO BE SCRAMBLED WITH - COLUMN TO BE SCRAMBLED IS DATE AT TABLE '+@TABLE_NAME;
		RAISERROR(@ERROR_MSG,16,1);
	END 
	IF @TYPE IN('INT','BIGINT','SMALLINT','NUMERIC','TINYINT','DECIMAL','MONEY') AND @SCRAMBLE_METHOD='RPL' AND ISNUMERIC(@VALUE_TO_BE_CHANGED)=0
	BEGIN
		SET @ERROR_MSG='REPLACE COLUMN DOES NOT MATCH THE COLUMN TO BE SCRAMBLED WITH - COLUMN TO BE SCRAMBLED IS NUMERIC AT TABLE '+@TABLE_NAME;
		RAISERROR(@ERROR_MSG,16,1);
	END
	IF NOT EXISTS(SELECT 1 FROM TABLE_config  WHERE SCRAMBLE_ID > @SCRAMBLE_ID)
	BEGIN
         SET @SCRAMBLE_ID = NULL
		 END
     ELSE
         BEGIN
              SELECT TOP 1 @SCRAMBLE_ID=TC.SCRAMBLE_ID, @TABLE_NAME=TC.TABLE_NAME ,@COLUMN_NAME=TC.COLUMN_NAME ,
				@SCRAMBLE_METHOD= TC.SCRAMBLE_METHOD ,@WHERE_COND=TC.WHERE_CONDITION,@VALUE_TO_BE_CHANGED=TC.VALUE_TO_BE_CHANGED ,
				@LOG_TABLE_NAME = TC.LOG_TABLE_NAME , @LOG_TABLE_DETAIL_NAME = TC.LOG_TABLE_DETAIL_NAME FROM TABLE_CONFIG AS TC  WHERE SCRAMBLE_ID > @SCRAMBLE_ID ORDER BY SCRAMBLE_ID 
       END
    END
------------------------------------------------------LOG TABLE CHECKING----------------------------------------
	SELECT TOP 1 @LOG_TABLE_NAME = LOG_TABLE_NAME , @LOG_TABLE_DETAIL_NAME = LOG_TABLE_DETAIL_NAME  
						FROM TABLE_CONFIG 
	IF (
	(@LOG_TABLE_NAME IS NOT NULL AND @LOG_TABLE_DETAIL_NAME IS NULL)
	OR
	(@LOG_TABLE_DETAIL_NAME IS NOT NULL AND @LOG_TABLE_NAME IS NULL))
	BEGIN
		SET @ERROR_MSG = 'LOG TABLE HEADER & DETAIL TABLE BOTH SHOULD HAVE VALUES OR NULL IN TABLE_CONFIG'
        RAISERROR (@ERROR_MSG, 16,1 );  
	END
	SET @LOG_TABLE_NAME = ISNULL(@LOG_TABLE_NAME,'SGS_SCRAMBLE')
	SET @LOG_TABLE_DETAIL_NAME = ISNULL(@LOG_TABLE_DETAIL_NAME,'SGS_SCRAMBLE_DETAILS')
-------------------------------------------------CREATING LOG_TABLE---------------------------------------------------
	IF NOT EXISTS(SELECT TOP 1 * FROM SYS.OBJECTS WHERE TYPE ='U' AND NAME = @LOG_TABLE_NAME)
		BEGIN
			EXEC SCRAMBLE_LOG_CREATE_TABLE @LOG_TABLE_NAME, @LOG_TABLE_DETAIL_NAME
		END
--------------------------------------------------CHECKING LOG TABLE-----------------------------------------
--SELECT * FROM LOG_2
	IF NOT EXISTS(SELECT TOP 1 * FROM SYS.OBJECTS WHERE TYPE ='U' AND NAME = @LOG_TABLE_NAME)
	BEGIN
		SET @ERROR_MSG='LOG TABLE '+@LOG_TABLE_NAME+' NOT AVAILABLE'
		RAISERROR(@ERROR_MSG,16,1);
	END
	IF NOT EXISTS(SELECT TOP 1 * FROM SYS.OBJECTS WHERE TYPE ='U' AND NAME = @LOG_TABLE_DETAIL_NAME)
	BEGIN
		SET @ERROR_MSG='LOG TABLE '+@LOG_TABLE_DETAIL_NAME+' NOT AVAILABLE'
		RAISERROR(@ERROR_MSG,16,1);
	END
-----------------------------------------------------------SCRAMBLE_DATA----------------------------------------------------------------
--SELECT * FROM TABLE_CONFIG
	SET @SCRAMBLE_ID=NULL
	SELECT TOP 1 @SCRAMBLE_ID=SCRAMBLE_ID, @TABLE_NAME=TABLE_NAME ,@COLUMN_NAME=COLUMN_NAME ,
				@SCRAMBLE_METHOD= SCRAMBLE_METHOD  ,@LOG_TABLE_NAME = LOG_TABLE_NAME , @LOG_TABLE_DETAIL_NAME = LOG_TABLE_DETAIL_NAME , @WHERE_COND=WHERE_CONDITION,@VALUE_TO_BE_CHANGED=VALUE_TO_BE_CHANGED 
						FROM TABLE_CONFIG 
    WHILE @SCRAMBLE_ID IS NOT NULL 
    BEGIN
	IF @WHERE_COND IS NOT NULL SET @WHERE_COND=' WHERE '+@WHERE_COND
	ELSE SET @WHERE_COND=' '
---------------------------------------GETTING DATA TYPE ---------------------------------------------------------------------
	SELECT top 1 @TYPE=DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS 
							WHERE TABLE_NAME = @TABLE_NAME and COLUMN_NAME= @COLUMN_NAME
	SELECT TOP 1 @IDENTITY_COL_NAME=C.NAME FROM SYS.OBJECTS O JOIN SYS.columns C 
							ON O.OBJECT_ID=C.OBJECT_ID AND O.NAME=@TABLE_NAME WHERE C.IS_IDENTITY=1;
	IF @TYPE IN('DATETIME','DATE')
		BEGIN
			SET @DATE=GETDATE()
			SET @DATETIME = GETDATE()
			SET @SCRAMBLE_METHOD=ISNULL(@SCRAMBLE_METHOD,'DEF')
			IF @SCRAMBLE_METHOD='RPL'
			BEGIN
				SET @REPLACE_VALUE=@VALUE_TO_BE_CHANGED
				SET @SQL_STMT= 'UPDATE '+@TABLE_NAME+ ' SET '+@COLUMN_NAME+' = '+''''+@REPLACE_VALUE+''''+' '+@WHERE_COND
--				PRINT (@SQL_STMT)
				EXEC(@SQL_STMT)
			END
			ELSE IF @SCRAMBLE_METHOD='DEF' 
			BEGIN
				SET @REPLACE_VALUE='@'+@TYPE
				SET @SQL_STMT= 'UPDATE '+@TABLE_NAME+ ' SET '+@COLUMN_NAME+' = '+@REPLACE_VALUE+' '+@WHERE_COND
--				PRINT (@SQL_STMT)
				EXEC SP_EXECUTESQL @SQL_STMT,N'@DATE DATE,@DATETIME DATETIME',@DATE,@DATETIME
			END
		END
	IF @TYPE IN ('VARCHAR','CHAR','TEXT','NVARCHAR','NCHAR')
		BEGIN
			SET @IDENTITY_COL_NAME=ISNULL(@IDENTITY_COL_NAME,'')
			SET @SCRAMBLE_METHOD=ISNULL(@SCRAMBLE_METHOD,'DEF')
			IF @SCRAMBLE_METHOD='DEF' SET @REPLACE_VALUE=@COLUMN_NAME+'-';
			IF @SCRAMBLE_METHOD='RPL' SET @REPLACE_VALUE=@VALUE_TO_BE_CHANGED+'-';
			SET @SQL_STMT='UPDATE '+@TABLE_NAME + ' SET '+@COLUMN_NAME+' = '+''''+ @REPLACE_VALUE+''''+'+'+'CAST('+CAST(@IDENTITY_COL_NAME AS VARCHAR(10))+' AS VARCHAR(10))'+@WHERE_COND;
			PRINT(@SQL_STMT)
			EXEC(@SQL_STMT)
		END
		IF @TYPE IN('INT','BIGINT','SMALLINT','NUMERIC','TINYINT','DECIMAL','MONEY')
		BEGIN
			SET @IDENTITY_COL_NAME=ISNULL(@IDENTITY_COL_NAME,'')
			SET @SCRAMBLE_METHOD=ISNULL(@SCRAMBLE_METHOD,'DEF')
			IF @SCRAMBLE_METHOD='DEF' SET @REPLACE_VALUE=@IDENTITY_COL_NAME;
			IF @SCRAMBLE_METHOD='RPL' SET @REPLACE_VALUE=''''+@VALUE_TO_BE_CHANGED+''' + '+'CAST('+@IDENTITY_COL_NAME+' AS INT)';
			SET @SQL_STMT='UPDATE '+@TABLE_NAME+' SET '+@COLUMN_NAME+' = '+@REPLACE_VALUE+' '+@WHERE_COND
			PRINT(@SQL_STMT)
			EXEC(@SQL_STMT)
		END
    IF NOT EXISTS(SELECT 1 FROM TABLE_config  WHERE SCRAMBLE_ID > @SCRAMBLE_ID)
	BEGIN
         SET @SCRAMBLE_ID = NULL
		 END
     ELSE
         BEGIN
              SELECT TOP 1 @SCRAMBLE_ID=TC.SCRAMBLE_ID, @TABLE_NAME=TC.TABLE_NAME ,@COLUMN_NAME=TC.COLUMN_NAME ,
				@SCRAMBLE_METHOD= TC.SCRAMBLE_METHOD ,@WHERE_COND=TC.WHERE_CONDITION,@VALUE_TO_BE_CHANGED=TC.VALUE_TO_BE_CHANGED ,
				@LOG_TABLE_NAME = TC.LOG_TABLE_NAME , @LOG_TABLE_DETAIL_NAME = TC.LOG_TABLE_DETAIL_NAME FROM TABLE_CONFIG AS TC  WHERE SCRAMBLE_ID > @SCRAMBLE_ID ORDER BY SCRAMBLE_ID 
       END
    END
	SET @END_DATE=GETDATE()
END TRY
BEGIN CATCH
	PRINT @ERROR_MSG
END CATCH